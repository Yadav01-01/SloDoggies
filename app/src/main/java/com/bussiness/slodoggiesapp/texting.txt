@RequiresApi(Build.VERSION_CODES.Q)
@Composable
fun CustomBottomBar(
    navController: NavController,
    items: List<PetOwnerBottomNavItem>,
    selectedRoute: String,
    onItemClick: (PetOwnerBottomNavItem) -> Unit
) {
    Surface(
        color = Color.White,
        shadowElevation = 8.dp
    ) {
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(vertical = 8.dp),
            horizontalArrangement = Arrangement.SpaceAround, // Evenly distribute items
            verticalAlignment = Alignment.CenterVertically
        ) {
            items.forEach { item ->
                val selected = item.route == selectedRoute
                Column(
                    modifier = Modifier
                        .weight(1f) // Use weight instead of fillMaxWidth
                        .padding(vertical = 8.dp),
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Box(
                        modifier = Modifier
                            .size(40.dp)
                            .clip(RoundedCornerShape(8.dp))
                            .background(if (selected) Color(0xFF5C2C4D) else Color.Transparent),
                        contentAlignment = Alignment.Center
                    ) {
                        Icon(
                            painter = painterResource(id = item.icon),
                            contentDescription = item.label,
                            tint = if (selected) Color.White else Color(0xFF303030),
                            modifier = Modifier.size(24.dp)
                        )
                    }
                    if (item.label.isNotEmpty()) { // Only show text if label exists
                        Spacer(modifier = Modifier.height(4.dp))
                        Text(
                            text = item.label,
                            color = if (selected) Color(0xFF5C2C4D) else Color(0xFF303030),
                            fontSize = 10.sp,
                            fontFamily = FontFamily(Font(R.font.outfit_regular)),
                            maxLines = 1
                        )
                    }
                }
            }
        }
    }
}